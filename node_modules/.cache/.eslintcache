[{"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\index.js":"1","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App.js":"2","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\Router\\Routing.js":"3","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\navbar\\Navbar.js":"4","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Pages\\Homepage.js":"5","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Pages\\ProjectDetailsPage\\DetailsPage.js":"6","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\centerelement\\centreelement.js":"7","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\projectdetails\\projectdetails.js":"8","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\ProjectName\\ProjectName.js":"9","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\ProjectCard\\ProjectCard.js":"10","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\totaldata\\totaldata.js":"11","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\ProjectDescription\\ProjectDescription.js":"12","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\ProjectCard\\ProjectCardData.js":"13","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\newprojectform\\newprojectform.js":"14","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\filteroption\\filteroption.js":"15","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\ProjectDescription\\DescriptionData.js":"16","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\WeeklyForm\\WeeklyUpdate.js":"17","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\Definition\\Definition.js":"18","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\CommonDropDown.js":"19","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Containers\\ResourceFeild\\ResourceFeild.js":"20","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\Login.js":"21"},{"size":379,"mtime":1668834525090,"results":"22","hashOfConfig":"23"},{"size":439,"mtime":1669124953582,"results":"24","hashOfConfig":"23"},{"size":633,"mtime":1669125017747,"results":"25","hashOfConfig":"23"},{"size":2017,"mtime":1669199997266,"results":"26","hashOfConfig":"23"},{"size":2311,"mtime":1669114264201,"results":"27","hashOfConfig":"23"},{"size":1853,"mtime":1669125158561,"results":"28","hashOfConfig":"23"},{"size":1945,"mtime":1668834526976,"results":"29","hashOfConfig":"23"},{"size":3811,"mtime":1669125002822,"results":"30","hashOfConfig":"23"},{"size":744,"mtime":1668834526817,"results":"31","hashOfConfig":"23"},{"size":1412,"mtime":1668834526609,"results":"32","hashOfConfig":"23"},{"size":557,"mtime":1668834527224,"results":"33","hashOfConfig":"23"},{"size":5097,"mtime":1668834526759,"results":"34","hashOfConfig":"23"},{"size":2985,"mtime":1668838137838,"results":"35","hashOfConfig":"23"},{"size":15379,"mtime":1668834527151,"results":"36","hashOfConfig":"23"},{"size":506,"mtime":1668834527028,"results":"37","hashOfConfig":"23"},{"size":2446,"mtime":1668834526700,"results":"38","hashOfConfig":"23"},{"size":17339,"mtime":1668834526913,"results":"39","hashOfConfig":"23"},{"size":1431,"mtime":1668834526552,"results":"40","hashOfConfig":"23"},{"size":4589,"mtime":1669193407250,"results":"41","hashOfConfig":"23"},{"size":3287,"mtime":1668834527271,"results":"42","hashOfConfig":"23"},{"size":3103,"mtime":1669197195435,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},"dpg7pp",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"48"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\index.js",["114"],[],"import React ,{useContext}from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./App/stylesheets/index.scss\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n",[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App.js",["115","116"],[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\Router\\Routing.js",[],[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\navbar\\Navbar.js",[],[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Pages\\Homepage.js",["117","118"],[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Pages\\ProjectDetailsPage\\DetailsPage.js",[],[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\centerelement\\centreelement.js",[],[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\projectdetails\\projectdetails.js",["119"],[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\ProjectName\\ProjectName.js",["120"],[],"import React from 'react'\nimport './ProjectName.scss'\n\nconst ProjectName = (props) => {\n\n  const {projectName,logo,status,startDate}=props;\n   let StartDate = startDate.slice(4, 11);\n  return (\n    <div className='project'>\n        <div className=\"project_name\">\n            <h2 className=\"project_name_projectname\">{projectName}</h2>\n            <img className=\"project_name_logoUrl\" src={logo}></img>\n            <div className='project_name_status'>\n            <span className=\"project_name_status_spans\">{status}</span>\n            </div>\n        </div>\n        <div className='project_duration'>\n            <span className=\"project_duration_spans\">Duration: {StartDate}</span>\n        </div>\n    </div>\n  )\n}\n\nexport default ProjectName;","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\ProjectCard\\ProjectCard.js",[],[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\totaldata\\totaldata.js",[],[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\ProjectDescription\\ProjectDescription.js",["121","122","123"],[],"import React, { useEffect, useState, useContext } from \"react\";\nimport Definition from \"../Definition/Definition\";\nimport DescriptionData from \"./DescriptionData\";\nimport axios from \"axios\";\nimport \"./ProjectDescription.scss\";\nimport WeeklyUpdate from \"../WeeklyForm/WeeklyUpdate\";\nimport MonthsDropDown from \"../../Assests/images/MonthsDropDown.png\";\nimport \"./ForUpdate.scss\";\n\nconst ProjectDescription = (props) => {\n  const [week, setWeek] = useState();\n  const [monthUpdate, setMonthUpdate] = useState();\n  const [shownOff, setShownOff] = useState(false);\n  const [month, setMonth] = useState(\"January\");\n  const [display, setDisplay] = useState(false);\n  const [weeklyReport, setWeeklyReport] = useState({});\n   const [showReport, setShowReport] = useState(false);\n\n  const { projectId } = props;\n\n  const Month = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  console.log(\"same\", projectId);\n\n  const weekUpdate = () => {\n    axios\n      .post(\"http://13.233.18.99:3010/api/v1/reports/getWeeklyReport\", {\n        ProjectId:projectId,\n        Month:monthUpdate,\n        Week:week,\n      })\n      .then((response) => {\n        //  setShowReport(true);\n        setWeeklyReport(response?.data);\n        if(response?.data?.content?.weeklyDetail.length===0)\n        {\n          setShowReport(false);\n        }\n        else{\n          setShowReport(true)\n        }\n\n        console.log(\"weekpost\", response);\n      })\n      .catch((error) => {\n        // setShowReport(false);\n        console.log(\"error\", error);\n      });\n  };\n\n  \n  useEffect(() => {\n    weekUpdate();\n    \n  }, [week, monthUpdate]);\n\n  // console.log(\"report\", weeklyReport);\n\n  //    const Addmonth=(value)=>{\n  //     console.log(value);\n\n  //     // console.log((Month.findIndex(value)));\n  //     setMonthUpdate(Month.indexOf(value)+1)\n  //     console.log(Month.indexOf(value)+1);\n\n  //     console.log(monthUpdate);\n\n  //    }\n\n  return (\n    <div>\n      <div className=\"ForUpdate\">\n        <div className=\"ForUpdate_Year\">\n          <div\n            className=\"ForUpdate_Year_Month\"\n            onClick={() => setDisplay(!display)}\n          >\n            <span className=\"ForUpdate_Year_Month_Placeholder\">{month}</span>\n\n            <img\n              className=\"ForUpdate_Year_Month_DropDown\"\n              src={MonthsDropDown}\n              onClick={() => setDisplay(!display)}\n            />\n          </div>\n\n          <div className=\"ForUpdate_Year_Week_btn\">\n            <button\n              className=\"ForUpdate_Year_Week_btn_1\"\n              onClick={(previous) => {\n                setWeek((previous = 1));\n              }}\n            >\n              Week 1\n            </button>\n            <button\n              className=\"ForUpdate_Year_Week_btn_2\"\n              onClick={(previous) => {\n                setWeek((previous = 2));\n              }}\n            >\n              Week 2\n            </button>\n            <button\n              className=\"ForUpdate_Year_Week_btn_3\"\n              onClick={(previous) => {\n                setWeek((previous = 3));\n              }}\n            >\n              Week 3\n            </button>\n            <button\n              className=\"ForUpdate_Year_Week_btn_4\"\n              onClick={(previous) => {\n                setWeek((previous = 4));\n              }}\n            >\n              Week 4\n            </button>\n          </div>\n        </div>\n        <div className=\"ForUpdate_btn\">\n          <button className=\"ForUpdate_btn_1\" onClick={() => setShownOff(true)}>\n            Update\n          </button>\n        </div>\n      </div>\n\n      {display ? (\n        <div className=\"Month\">\n          {Month.map((monthName) => {\n            return (\n              <span\n                className=\"Month_All\"\n                onClick={(previous) => {\n                  setMonthUpdate((previous = Month.indexOf(monthName) + 1));\n                  setMonth(monthName);\n                  setDisplay(!display);\n                }}\n              >\n                {\" \"}\n                {monthName}\n              </span>\n            );\n          })}\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <WeeklyUpdate\n        trigger={shownOff}\n        setShownOff={setShownOff}\n        Id={projectId}\n        weekUpdate={weekUpdate}\n      />\n\n      <div className=\"ProjectDescription-All\">\n        <div className=\"ProjectDescription_Data\">\n          {showReport?(\n            weeklyReport?.content?.weeklyDetail &&\n            weeklyReport?.content?.weeklyDetail.map((data) => (\n              <DescriptionData data={data} />\n            ))):(<span className=\"Report_Status\">No Data Found For This Week</span>)\n          }\n        </div>\n        <div>\n          {showReport?(\n            weeklyReport?.content?.others &&\n              weeklyReport?.content?.others.map((value) => (\n                <Definition value={value} />\n              ))):\"\"\n            }\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default ProjectDescription;\n","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\ProjectCard\\ProjectCardData.js",["124"],[],"import React from \"react\";\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport Bugs from \"../../Assests/images/Bugs.svg\";\nimport Dependencies from \"../.././Assests/images/Dependencies.svg\";\nimport CodeReview from \"../../Assests/images/codereview.svg\";\nimport UnitTesting from \"../../Assests/images/unittesting.svg\";\nimport Delay from \"../../Assests/images/Delay.svg\";\nimport \"./ProjectCardData.scss\";\n\nconst ProjectCardData = (props) => {\n  const { numberOfBugs, dependencies, codeReviews, unitTesting, delay } = props;\n\n  return (\n    <div>\n      <div className=\"ProjectCard-Contain\">\n        <div className=\"ProjectCard\">\n          <div className=\"ProjectCard_avatar\">\n            <div className=\"ProjectCard-Logo\">\n              <img src={Bugs} alt=\"buglogo\" />\n            </div>\n          </div>\n          <div className=\"ProjectCard_detail\">\n            <span className=\"ProjectCard_detail_Count\">{numberOfBugs}</span>\n            <p className=\"ProjectCard_detail_Name\">New Bugs</p>\n          </div>\n        </div>\n\n        <div className=\"ProjectCard\">\n          <div className=\"ProjectCard_avatar\">\n            <div className=\"ProjectCard-Logo\">\n              <img src={Dependencies} alt=\"buglogo\" />\n            </div>\n          </div>\n\n          <div className=\"ProjectCard_detail\">\n            <span className=\"ProjectCard_detail_Count\">{dependencies}%</span>\n            <p className=\"ProjectCard_detail_Name\">Dependencies</p>\n          </div>\n        </div>\n\n        <div className=\"ProjectCard\">\n          <div className=\"ProjectCard_avatar\">\n            <div className=\"ProjectCard-Logo\">\n              <img src={CodeReview} alt=\"buglogo\" />\n            </div>\n          </div>\n\n          <div className=\"ProjectCard_detail\">\n            <span className=\"ProjectCard_detail_Count\">{codeReviews}%</span>\n            <p className=\"ProjectCard_detail_Name\">Code Review</p>\n          </div>\n        </div>\n\n        <div className=\"ProjectCard\">\n          <div className=\"ProjectCard_avatar\">\n            <div className=\"ProjectCard-Logo\">\n              <img src={UnitTesting} alt=\"buglogo\" />\n            </div>\n          </div>\n          <div className=\"ProjectCard_detail\">\n            <span className=\"ProjectCard_detail_Count\">{unitTesting}</span>\n            <p className=\"ProjectCard_detail_Name\">Unit Testing</p>\n          </div>\n        </div>\n\n        <div className=\"ProjectCard\">\n          <div className=\"ProjectCard-Logo_delay\">\n            <CircularProgressbar\n              value={delay}\n              circleRatio={0.7}\n              strokeWidth={16}\n              \n            />\n          </div>\n          <div className=\"ProjectCard_detail\">\n            <span className=\"ProjectCard_detail-Count_delay\">{delay}</span>\n            <p className=\"ProjectCard_detail-Name_delay\">Delay</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCardData;\n","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\newprojectform\\newprojectform.js",["125"],[],"import React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport DropDown from \"../../Assests/images/DropDown.svg\";\nimport ResourceFeild from \"../../Containers/ResourceFeild/ResourceFeild\";\nimport \"./newproject.scss\";\n\n\nfunction Newprojectform(props) {  \n  const { trigger, setShowForm , getOverallDetails } = props;\n  let count = 0;\n  const [total, settotal]  = useState(count);\n  const [front, setfront]  = useState(count);\n  const [back, setback]    = useState(count);\n  const [QA, setQA]        = useState(count);\n  const [test, settest]    = useState(count);  \n  const [FileName, setFileName]  = useState(\"\");\n  const [imageUrl, setImageUrl]  = useState(\"\")\n  const [showLogo, setShowLogo]  = useState(false);\n  const [showResourceFeild, setshowResourceFeild] = useState(false);\n\n  //function for add logo -start\n\n  const inputFileRef = useRef(null);\n  const onFilechange = (e) => {\n  const [FileName]   = e.target.files;\n    setFileName(URL.createObjectURL(FileName));\n    e.preventDefault()\n    var formdata = new FormData();\n    formdata.append(\"file\", e.target.files[0]);\n    console.log(e.target.files[0])\n    console.log(formdata)\n    axios.post(\"http://13.233.18.99:3010/api/v1/projects/upload_image\", formdata)\n   .then(response => {\n     setImageUrl(response?.data?.content?.url)\n     console.log(\"response\",response?.data?.content?.url)\n    }\n    )\n  .catch(error => console.log('error', error));\n    setShowLogo(true);\n  };\n  \n  const onBtnClick = () => {  \n    inputFileRef.current.click();\n  };\n  \n  //---------------------------End-----------------------//\n  \n  //form validation\n  const initialValues = {\n    ProjectTitle: \"\",\n    ProjectPaymentCost: \"\",\n    ProjectStartDate: \"\",\n    ProjectDuration: \"\",\n    overallProjectCompletetion: \"\",\n    ProjectLogoUrl: \"\",\n    frontEndenginner: \"\",\n    backendEngineer: \"\",\n    qaEngineer: \"\",\n    designer: \"\",\n    StartDate: \"\",\n    endDate: \"\",\n    numberOfStories: \"\",\n    numberOfBugs: \"\",\n  };\n  const [formValues, setFormValue] = useState(initialValues);\n  const [formErrors, setFormError] = useState(false);\n  const [isSubmit, setIsSubmit] = useState(false)\n\n  const handleChange = (e, type) => {\n    console.log(FileName);\n    const { value } = e.target;\n    setFormValue({ ...formValues, [type]: value });\n  };\n   \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setIsSubmit(true);\n    setFormError(validate(formValues));\n    if (\n      formValues.ProjectTitle !== \"\" &&\n      formValues.ProjectPaymentCost !== \"\" &&\n      formValues.ProjectStartDate !== \"\" &&\n      formValues.ProjectDuration !== \"\" &&\n      total !== 0 &&\n      total > 0 &&\n      formValues.overallProjectCompletetion !== \"\" &&\n      formValues.StartDate !== \"\" &&\n      formValues.endDate !== \"\" &&\n      formValues.numberOfStories !== \"\" &&\n      formValues.numberOfBugs !== \"\"&&\n      FileName!==\"\"\n    ) {\n        setFormValue(initialValues);\n        setshowResourceFeild(false)\n        setShowLogo(false);\n        setShowForm(false);\n        setQA(0)\n        setback(0)\n        setfront(0)\n        settest(0)\n        settotal(0)\n        setFileName(\"\")\n        setImageUrl(\"\")\n\n      axios\n        .post(\"http://13.233.18.99:3010/api/v1/projects/createproject\", {\n          projectTitle: formValues.ProjectTitle,\n          projectPaymentCost: formValues.ProjectPaymentCost,\n          projectStartDate: formValues.ProjectStartDate,\n          projectDuration: formValues.ProjectDuration,\n          overallProjectCompletion: formValues.overallProjectCompletetion,\n          projectLogoUrl: imageUrl,\n          resourcesUsed: {\n            total: total,\n            resourceInfo: [\n              {\n                frontEndengineer: front,\n              },\n              {\n                backendEngineer: back,\n              },\n              {\n                qaEngineer: QA,\n              },\n              {\n                designer: test,\n              },\n            ],\n          },\n          weeklyDetail: {\n            startDate: formValues.StartDate,\n            endDate: formValues.endDate,\n            numberOfStories: formValues.numberOfStories,\n            numberOfBugs: formValues.numberOfBugs,\n          },\n        })\n        .then((response) => {\n          getOverallDetails()\n          console.log(response);\n          console.log(response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  const validate = (values) => {\n    const errors = {};\n    if (!values.ProjectTitle.trim()) {\n      errors.ProjectTitle = \"Please Enter  Project Name\";\n    }\n    if (!values.ProjectPaymentCost.trim()) {\n      errors.ProjectPaymentCost = \"Please Enter  T&M/Fixed Cost\";\n    }\n    if (values.ProjectPaymentCost < 0) {\n      errors.ProjectPaymentCost = \"T&M/Fixed Cost shouldn't be negative\";\n    }\n    if (!values.ProjectStartDate.trim()) {\n      errors.ProjectStartDate = \"Please Enter Date\";\n    }\n    if (!values.ProjectDuration.trim()) {\n      errors.ProjectDuration = \"Please Enter Duration Value\";\n    }\n    if (values.ProjectDuration < 0) {\n      errors.ProjectDuration = \"Duration shouldn't be negative\";\n    }\n    if (!values.overallProjectCompletetion.trim()) {\n      errors.overallProjectCompletetion = \"Please Enter project completion %\";\n    }\n    if (values.overallProjectCompletetion < 0) {\n      errors.overallProjectCompletetion = \"Duration shouldn't be negative\";\n    }\n    if (values.overallProjectCompletetion > 100) {\n      errors.overallProjectCompletetion =\n      \"Percent shouldn't be greater than 100\";\n    }\n    if (!values.StartDate.trim()) {\n      errors.StartDate = \"Please Enter Date\";\n    }\n    if (!values.endDate.trim()) {\n      errors.endDate = \"Please Enter Date\";\n    }\n    if (!values.numberOfBugs.trim()) {\n      errors.numberOfBugs = \"Please Enter number of bugs \";\n    }\n    if (values.numberOfBugs < 0) {\n      errors.numberOfBugs = \"Bugs shouldn't be negative\";\n    }\n    if (!values.numberOfStories.trim()) {\n      errors.numberOfStories = \"Please Enter the feature value\";\n    }\n    if (FileName === \"\") {\n      errors.selectedFile = \"please add the logo\";\n    }\n    if(total===0){\n      errors.totalresources=\"Please Enter Resource Feild\"\n    }\n    if(total <=0){\n      errors.totalresources=\"Please Enter Resource Feild\"\n    }   \n    return errors;\n  };\n\n  //-----------------validation end---------------------//\n  return trigger ? (\n    <>\n      <form className=\"new-project-form\" onSubmit={handleSubmit}>\n        <div className=\"new-project-form-container\">\n          <div className=\" new-project-form-container__form-heading\">\n            <span className=\"heading\"> Create New Project</span>\n          </div>\n          <div className=\"new-project-form-container__logo-container\">\n            {showLogo ? (\n              <React.Fragment>\n                <input\n                  type=\"file\"\n                  className=\"logo-form\"\n                  ref={inputFileRef}\n                  onChange={onFilechange}\n                />\n                <img className=\"logo-img\" src={FileName} alt=\"buglogo\" />\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <input\n                  type=\"file\"\n                  className=\"logo-form\"\n                  ref={inputFileRef}\n                  onChange={onFilechange}\n                />\n                <button className=\"logo-btn\" type=\"button\" onClick={onBtnClick}>\n                  +\n                </button>\n                <div className=\"add-logo\">Add logo</div>\n              </React.Fragment>\n            )}\n          </div>\n          <p className=\"errors\" style={{textAlign:\"center\"}}>{formErrors.selectedFile}</p>\n           <span className=\"new-project-form-container__Overall-Detail\">\n            Overall Detail\n           </span>\n          <div className=\"line-one\">\n            <div className=\"first\">\n              <label htmlFor=\"Project Name\" className=\"labels\">\n                Project Name\n              </label>\n              <br />\n              <input\n                id=\"Project Name\"\n                className=\"inputs\"\n                type=\"text\"\n                value={formValues.ProjectTitle}\n                onChange={(e) => handleChange(e, \"ProjectTitle\")}\n                placeholder=\"Enter Project Name\"\n              />  \n            {<p className=\"errors\">{formErrors.ProjectTitle}</p> }  \n            </div>\n            <div className=\"second\">\n              <label htmlFor=\"date\" className=\"labels\">\n                Project Start Date\n              </label>\n              <br />\n              <input\n                id=\"date\"\n                className=\"inputs\"\n                type=\"date\"\n                value={formValues.ProjectStartDate}\n                onChange={(e) => handleChange(e, \"ProjectStartDate\")}\n                placeholder=\"Enter Project Start Date\"\n              />\n              {formErrors.ProjectStartDate && (\n                <p className=\"errors\">{formErrors.ProjectStartDate}</p>\n              )}\n            </div>\n          </div>\n          <div className=\"line-one\">\n            <div className=\"first\">\n              <label htmlFor=\"Duration\" className=\"labels\">\n                Duration\n              </label>\n              <br />\n              <input\n                id=\"Duration\"\n                className=\"inputs\"\n                type=\"number\"\n                onWheel={ event => event.currentTarget.blur() }\n                value={formValues.ProjectDuration}\n                onChange={(e) => handleChange(e, \"ProjectDuration\")}\n                placeholder=\"Enter Duration\"\n              />\n              <p className=\"errors\">{formErrors.ProjectDuration}</p>\n            </div>\n             <div>\n              <label htmlFor=\"totalresources\" className=\"labels\">\n                Total resources\n              </label>\n              <br />\n              <div className=\"resource-field\"\n               onClick={(e) => setshowResourceFeild(!showResourceFeild)}>\n                <p className=\"totalvalue\">{total}</p>\n                <img\n                  className=\"dropdown\"\n                  src={DropDown}\n                  alt=\"dropdown\"\n                />\n              <ResourceFeild\n                showResourceFeild={showResourceFeild}\n                setshowResourceFeild={setshowResourceFeild}\n                settotal={settotal}\n                setfront={setfront}\n                setback={setback}\n                setQA={setQA}\n                settest={settest}\n                front={front}\n                back={back}\n                total={total}\n                test={test}\n                QA={QA}\n              />\n              <p className=\"errors\" style={{marginTop:\"2.1rem\"}}>{formErrors.totalresources}</p>\n               </div>\n            </div>\n          </div>\n          <div className=\"line-one\">\n            <div className=\"first\">\n              <label htmlFor=\"project-completion\" className=\"extralabel\">\n                Overall Project% Completion\n              </label>\n              <br />\n              <input\n                id=\"project-completion\"\n                className=\"inputs\"\n                onChange={(e) => handleChange(e, \"overallProjectCompletetion\")}\n                type=\"number\"\n                onWheel={ event => event.currentTarget.blur() }\n                value={formValues.overallProjectCompletetion}\n                placeholder=\"\"\n              />\n              <p className=\"errors\">{formErrors.overallProjectCompletetion}</p>\n            </div>\n            <div className=\"second\">\n              <label htmlFor=\"fixedcost\" className=\"labels\">\n                T&M/Fixed Cost\n              </label>\n              <br />\n              <input\n                id=\"fixedcost\"\n                className=\"inputs\"\n                type=\"number\"\n                onWheel={ event => event.currentTarget.blur() }\n                value={formValues.ProjectPaymentCost}\n                onChange={(e) => handleChange(e, \"ProjectPaymentCost\")}\n                placeholder=\"Enter T&M/Fixed Cost\"\n              />\n              {formErrors.ProjectPaymentCost && (\n                <p className=\"errors\">{formErrors.ProjectPaymentCost}</p>\n              )}\n            </div>\n          </div>\n          <span className=\"Weekly-Detail\">Weekly Detail</span>\n          <div className=\"line-one\">\n            <div className=\"first\">\n              <label htmlFor=\"start-date\" className=\"labels\">\n                Start Date\n              </label>\n              <br />\n              <input\n                id=\"start-date\"\n                className=\"inputs\"\n                type=\"date\"\n                value={formValues.StartDate}\n                onChange={(e) => handleChange(e, \"StartDate\")}\n                placeholder=\"Enter Start Date\"\n              />\n              <p className=\"errors\">{formErrors.StartDate}</p>\n            </div>\n            <div className=\"second\">\n              <label htmlFor=\"end-date\" className=\"labels\">\n                End Date\n              </label>\n              <br />\n              <input\n                id=\"end-date\"\n                className=\"inputs\"\n                type=\"date\"\n                value={formValues.endDate}\n                onChange={(e) => handleChange(e, \"endDate\")}\n                placeholder=\"Enter End Date\"\n              />\n              <p className=\"errors\">{formErrors.endDate}</p>\n            </div>\n          </div>\n          <div className=\"line-one\">\n            <div className=\"first\">\n              <label htmlFor=\"features\" className=\"labels\">\n                No.of Features/Stories\n              </label>\n              <br />\n              <input\n                id=\"features\"\n                className=\"inputs\"\n                onChange={(e) => handleChange(e, \"numberOfStories\")}\n                type=\"number\"\n                onWheel={ event => event.currentTarget.blur() }\n                value={formValues.numberOfStories}\n                placeholder=\"\"\n              />\n              <p className=\"errors\">{formErrors.numberOfStories}</p>\n            </div>\n            <div className=\"second\">\n              <label htmlFor=\"bugs\" className=\"labels\">\n                No.of Bugs\n              </label>\n              <br />\n              <input\n                id=\"bugs\"\n                className=\"inputs\"\n                type=\"number\"\n                value={formValues.numberOfBugs}\n                onChange={(e) => handleChange(e, \"numberOfBugs\")}\n                placeholder=\"Enter Bugs here\"\n              />\n              <p className=\"errors\">{formErrors.numberOfBugs}</p>\n            </div>\n          </div>\n          <div className=\"form-btn\">\n            <button\n              className=\"cancel-btn\"\n              onClick={(e) => {\n                setShowForm(false);\n                setFormValue(initialValues);\n                setShowLogo(false);\n                setQA(0)\n                setback(0)\n                setfront(0)\n                settest(0)\n                settotal(0)\n                setFileName(\"\")\n                setImageUrl(\"\")\n                setFormError(false)\n              }}\n            >\n            Cancel\n            </button>\n            <button className=\"done-btn\" type=\"submit\">Done</button>\n          </div>\n        </div>\n      </form>\n    </>\n  ) : (\n    \"\"\n  );\n  \n}\n\nexport default Newprojectform;\n","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\filteroption\\filteroption.js",[],[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\ProjectDescription\\DescriptionData.js",[],[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\WeeklyForm\\WeeklyUpdate.js",["126","127","128"],[],"import React, { useState, useEffect } from \"react\";\n// import ProjectDetails from '../../Pages/ProjectDetailsPage/DetailsPage';\n// import Cancel from \"../Button/Cancel\";\nimport CommonDropDown from \"../CommonDropDown\";\nimport axios from \"axios\";\nimport \"./WeeklyUpdate.scss\";\n\nconst WeeklyUpdate = (props) => {\n  const [designer, setDesigner] = useState(0);\n  const [frontEnd, setFrontEnd] = useState(0);\n  const [backEnd, setBackEnd] = useState(0);\n  const [qa, setQA] = useState(0);\n  const {weekUpdate} = props;\n\n  const [total, setTotal] = useState(0);\n\n  const initialValues = {\n    TMfixedCost: \"\",\n    weeklyCompletion: \"\",\n    // total:resource.total,\n    // frontendEngineer:3,\n    // backendEngineer: 4,\n    // qaEngineer: 1,\n    // designer: 2,\n    numberOfStories: \"\",\n    featuresCompleted: \"\",\n    newBugs: \"\",\n    bugsFixed: \"\",\n    codeReview: \"\",\n    unitTesting: \"\",\n    weeklyCommunication: \"\",\n    delay: \"\",\n    dependencies: \"\",\n    riskMitigation: \"\",\n    risks: \"\",\n    supportRequired: \"\",\n  };\n\n  const [formValues, setFormValues] = useState(initialValues);\n\n  const [formErrors, setFormErrors] = useState({\n    TMFixedCost: \"\",\n    WeeklyCompletion: \"\",\n    numberOfStories: \"\",\n    FeaturesCompleted: \"\",\n    newBugs: \"\",\n    ResourceField:\"\",\n    bugsFixed: \"\",\n    codeReview: \"\",\n    unitTesting: \"\",\n    weeklyCommunication: \"\",\n    delay: \"\",\n    Dependencies: \"\",\n    RisksMitigation: \"\",\n    Risks: \"\",\n    SupportRequired: \"\",\n  });\n\n  const [submit, setSubmit] = useState(false);\n\n  const handleChange = (event, type) => {\n    const { name, value } = event.target;\n    setFormValues({ ...formValues, [type]: value });\n  };\n\n  //  console.log(\"idpro\",props.Id)\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormValues(formValues);\n    setFormErrors(validate(formValues));\n\n    if (\n      formValues.TMfixedCost !== \"\" &&\n      formValues.weeklyCompletion !== \"\" &&\n      formValues.featuresCompleted !== \"\" &&\n      formValues.codeReview!==\"\"&&\n      formValues.unitTesting!==\"\"&&\n      formValues.weeklyCommunication!==\"\"&&\n      formValues.dependencies !== \"\" &&\n      formValues.riskMitigation !== \"\" &&\n      formValues.supportRequired !== \"\"\n    ) {\n      setSubmit(true);\n      props.setShownOff(false);\n      console.log(\"finally\", formValues);\n      axios\n        .post(\"http://13.233.18.99:3010/api/v1/reports/addWeeklyReport\", {\n          projectId: props.Id,\n          TMfixedCost: formValues.TMfixedCost,\n          resourceInfo: {\n            designer: designer,\n            totalresources: total,\n            frontend: frontEnd,\n            Backend: backEnd,\n            Tester: qa,\n          },\n          weeklyCompletion: formValues.weeklyCompletion,\n          numberOfStories: formValues.numberOfStories,\n          featuresCompleted: formValues.featuresCompleted,\n          newBugs: formValues.newBugs,\n          bugsFixed: formValues.bugsFixed,\n          codeReview: formValues.codeReview,\n          unitTesting: formValues.unitTesting,\n          weeklyCommunication: formValues.weeklyCommunication,\n          delay: formValues.delay,\n          dependencies: formValues.dependencies,\n          riskMitigation: formValues.riskMitigation,\n          risks: formValues.risks,\n          supportRequired: formValues.supportRequired,\n        })\n\n        .then((response) => {\n          console.log(response);\n          weekUpdate()\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n\n        setFormValues(\"\");\n        setTotal(0);\n    }\n  };\n\n  //Form Validation Part//\n\n  const validate = (values) => {\n    const errors = {};\n\n    if (!values.TMfixedCost.trim()) {\n      errors.TMFixedCost = \"*value required\";\n    }\n    if (values.TMfixedCost < 0) {\n      errors.TMFixedCost = \"Enter valid T&M/Fixed Cost\";\n    }\n    \n    if(total===0)\n    {\n      errors.ResourceField=\"*value required\";\n    }\n    if (!values.weeklyCompletion.trim()) {\n      errors.WeeklyCompletion = \"*value required\";\n    }\n    if (!values.numberOfStories.trim()) {\n      errors.numberOfStories = \"*value required\";\n    }\n    if (!values.featuresCompleted.trim()) {\n      errors.FeaturesCompleted = \"*value required\";\n    }\n\n    if (!values.newBugs.trim()) {\n      errors.newBugs = \"*value required\";\n    }\n    if (!values.bugsFixed.trim()) {\n      errors.bugsFixed = \"*value required\";\n    }\n    if (!values.codeReview.trim()) {\n      errors.codeReview = \"*value required\";\n    }\n    if (!values.unitTesting.trim()) {\n      errors.unitTesting = \"*value required\";\n    }\n    if (!values.weeklyCommunication.trim()) {\n      errors.weeklyCommunication = \"*value required\";\n    }\n    if (!values.delay.trim()) {\n      errors.delay = \"*value required\";\n    }\n    if (!values.dependencies.trim()) {\n      errors.Dependencies = \"*value required\";\n    }\n    if (!values.riskMitigation.trim()) {\n      errors.RisksMitigation = \"*value required\";\n    }\n    if (!values.risks.trim()) {\n      errors.Risks = \"*value required\";\n    }\n    if (!values.supportRequired.trim()) {\n      errors.SupportRequired = \"*value required\";\n    }\n\n    return errors;\n  };\n\n  //----------------------------------------------------------------//\n\n  return props.trigger ? (\n    //Form Starting\n    <form className=\"WeeklyReport_Form\"\n      \n      onSubmit={(e) => handleSubmit(e)}\n      method=\"POST\"\n    >\n      <div className=\"WeeklyUpdate\">\n        <div className=\"WeeklyUpdate_Head\">\n          <h1 className=\"WeeklyUpdate_Head_Title\">Weekly Update</h1>\n        </div>\n\n        <div className=\"WeeklyUpdate_Overalldetail\">\n          <h1 className=\"WeeklyUpdate_Overalldetail_Title\">Overall Detail</h1>\n\n          <div className=\"WeeklyUpdate_Overalldetail_Field\">\n            <div className=\"WeeklyUpdate_Overalldetail_Field_All\">\n              <label className=\"WeeklyUpdate_Overalldetail_Field_All_label\">\n                T&M/Fixed Cost\n              </label>\n              <br />\n              <input\n                className=\"WeeklyUpdate_Overalldetail_Field_All_input\"\n                type=\"number\"\n                onWheel={ event => event.currentTarget.blur() }\n                placeholder=\"Enter T&M/Fixed Cost \"\n                value={formValues.TMfixedCost}\n                onChange={(e) => handleChange(e, \"TMfixedCost\")}\n              />\n              <p className=\"ErrorMessage\">{formErrors.TMFixedCost}</p>\n            </div>\n\n            <div className=\"WeeklyUpdate_Overalldetail_Field_All\">\n              <label className=\"WeeklyUpdate_Overalldetail_Field_All_label\">\n                No.of resources used\n              </label>\n              <div className=\"Highlights\">\n                <span>10 resources allocated</span>\n              </div>\n              <br />\n              <div className=\"WeeklyUpdate_Overalldetail_Field_All_input\">\n                <CommonDropDown\n                  designer={designer}\n                  setDesigner={setDesigner}\n                  frontEnd={frontEnd}\n                  setFrontEnd={setFrontEnd}\n                  backEnd={backEnd}\n                  setBackEnd={setBackEnd}\n                  qa={qa}\n                  setQA={setQA}\n                  total={total}\n                  setTotal={setTotal}\n                />\n              </div>\n              <p className=\"ErrorMessage\">{formErrors.ResourceField}</p>\n            </div>\n\n            <div className=\"WeeklyUpdate_Overalldetail_Field_All\">\n              <label className=\"WeeklyUpdate_Overalldetail_Field_All_label\">\n                Weekly% Completion\n              </label>\n              <br />\n              <input\n                className=\"WeeklyUpdate_Overalldetail_Field_All_input\"\n                type=\"number\"\n                onWheel={ event => event.currentTarget.blur() }\n                placeholder=\"Enter a Weekly% Completion\"\n                value={formValues.weeklyCompletion}\n                onChange={(e) => handleChange(e, \"weeklyCompletion\")}\n              />\n              <p className=\"ErrorMessage\">{formErrors.WeeklyCompletion}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"WeeklyUpdate_Weeklydetail\">\n          <h1 className=\"WeeklyUpdate_Weeklydetail_Title\">Weekly Detail</h1>\n\n          <div className=\"WeeklyUpdate_Weeklydetail_Field\">\n            <div className=\"WeeklyUpdate_Weeklydetail_Field_All\">\n              <label className=\"WeeklyUpdate_Weeklydetail_Field_All_label\">\n                No.of Features/Stories\n              </label>\n              <br />\n              <input\n                className=\"WeeklyUpdate_Weeklydetail_Field_All_input\"\n                type=\"number\"\n                onWheel={ event => event.currentTarget.blur() }\n                placeholder=\"Enter a No.of Features/Stories\"\n                value={formValues.numberOfStories}\n                onChange={(e) => handleChange(e, \"numberOfStories\")}\n              />\n              <p className=\"ErrorMessage\">{formErrors.numberOfStories}</p>\n            </div>\n\n            <div className=\"WeeklyUpdate_Weeklydetail_Field_All\">\n              <label className=\"WeeklyUpdate_Weeklydetail_Field_All_label\">\n                Features Completed\n              </label>{\" \"}\n              <div className=\"Highlights2\">\n                <span>Total 100 stories</span>\n              </div>\n              <br />\n              <input\n                className=\"WeeklyUpdate_Weeklydetail_Field_All_input\"\n                type=\"number\"\n                onWheel={ event => event.currentTarget.blur() }\n                placeholder=\"Enter a Features Completed\"\n                onChange={(e) => handleChange(e, \"featuresCompleted\")}\n                value={formValues.featuresCompleted}\n              />\n              <p className=\"ErrorMessage\">{formErrors.FeaturesCompleted}</p>\n            </div>\n\n            <div className=\"WeeklyUpdate_Weeklydetail_Field_All\">\n              <label className=\"WeeklyUpdate_Weeklydetail_Field_All_label\">\n                New Bugs\n              </label>\n              <br />\n              <input\n                className=\"WeeklyUpdate_Weeklydetail_Field_All_input\"\n                type=\"number\"\n                onWheel={ event => event.currentTarget.blur() }\n                placeholder=\"Enter a New Bugs\"\n                value={formValues.newBugs}\n                onChange={(e) => handleChange(e, \"newBugs\")}\n              />\n              <p className=\"ErrorMessage\">{formErrors.newBugs}</p>\n            </div>\n\n            <div className=\"WeeklyUpdate_Weeklydetail_Field_All\">\n              <label className=\"WeeklyUpdate_Weeklydetail_Field_All_label\">\n                Bugs\n              </label>\n              <br />\n              <input\n                className=\"WeeklyUpdate_Weeklydetail_Field_All_input\"\n                type=\"number\"\n                onWheel={ event => event.currentTarget.blur() }\n                placeholder=\"Enter a Bugs\"\n                value={formValues.bugsFixed}\n                onChange={(e) => handleChange(e, \"bugsFixed\")}\n              />\n              <p className=\"ErrorMessage\">{formErrors.bugsFixed}</p>\n            </div>\n\n            <div className=\"WeeklyUpdate_Weeklydetail_Field_All\">\n              <label className=\"WeeklyUpdate_Weeklydetail_Field_All_label\">\n                Code Review\n              </label>\n              <br />\n              <select\n                style={{ backgroundColor: \"white\" }}\n                className=\"WeeklyUpdate_Weeklydetail_Field_All_input\"\n                type=\"boolean\"\n                defaultValue={null}\n                value={formValues.codeReview}\n                onChange={(e) => handleChange(e, \"codeReview\")}\n              >\n                <option value=\"\"></option>\n                <option value=\"true\">True</option>\n                <option value=\"false\">False</option>\n              </select>\n\n              <p className=\"ErrorMessage\">{formErrors.codeReview}</p>\n            </div>\n\n            <div className=\"WeeklyUpdate_Weeklydetail_Field_All\">\n              <label className=\"WeeklyUpdate_Weeklydetail_Field_All_label\">\n                Unit Testing\n              </label>\n              <br />\n              <select\n                style={{ backgroundColor: \"white\" }}\n                className=\"WeeklyUpdate_Weeklydetail_Field_All_input\"\n                type=\"boolean\"\n                defaultValue={null}\n                value={formValues.unitTesting}\n                onChange={(e) => handleChange(e, \"unitTesting\")}\n              >\n                <option value=\"\"></option>\n                <option value=\"true\">True</option>\n                <option value=\"false\">False</option>\n              </select>\n              <p className=\"ErrorMessage\">{formErrors.unitTesting}</p>\n            </div>\n\n            <div className=\"WeeklyUpdate_Weeklydetail_Field_All\">\n              <label className=\"WeeklyUpdate_Weeklydetail_Field_All_label\">\n                Weekly Communication\n              </label>\n              <br />\n              <select\n                style={{ backgroundColor: \"white\" }}\n                className=\"WeeklyUpdate_Weeklydetail_Field_All_input\"\n                type=\"boolean\"\n                defaultValue={null}\n                value={formValues.weeklyCommunication}\n                onChange={(e) => handleChange(e, \"weeklyCommunication\")}\n              >\n                <option value=\"\"></option>\n                <option value=\"true\">True</option>\n                <option value=\"false\">False</option>\n              </select>\n              <p className=\"ErrorMessage\">{formErrors.weeklyCommunication}</p>\n            </div>\n\n            <div className=\"WeeklyUpdate_Weeklydetail_Field_All\">\n              <label className=\"WeeklyUpdate_Weeklydetail_Field_All_label\">\n                Delay\n              </label>\n              <br />\n              <input\n                className=\"WeeklyUpdate_Weeklydetail_Field_All_input\"\n                type=\"number\"\n                onWheel={ event => event.currentTarget.blur() } \n                onChange={(e) => handleChange(e, \"delay\")}\n                value={formValues.delay}\n              />\n\n              <p className=\"ErrorMessage\">{formErrors.delay}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"WeeklyUpdate_Otherdetail\">\n          <h1 className=\"WeeklyUpdate_Otherdetail_Title\">Other Detail</h1>\n\n          <div className=\"WeeklyUpdate_Otherdetail_Field\">\n            <div className=\"WeeklyUpdate_Otherdetail_Field_All\">\n              <label className=\"WeeklyUpdate_Otherdetail_Field_All_label\">\n                Dependencies\n              </label>\n              <br />\n              <input\n                className=\"WeeklyUpdate_Otherdetail_Field_All_input\"\n                type=\"text\"\n                placeholder=\"Enter description\"\n                onChange={(e) => handleChange(e, \"dependencies\")}\n                value={formValues.dependencies}\n              />\n              <p className=\"ErrorMessage\">{formErrors.Dependencies}</p>\n            </div>\n\n            <div className=\"WeeklyUpdate_Otherdetail_Field_All\">\n              <label className=\"WeeklyUpdate_Otherdetail_Field_All_label\">\n                Risks Mitigation\n              </label>\n              <br />\n              <input\n                className=\"WeeklyUpdate_Otherdetail_Field_All_input\"\n                type=\"text\"\n                placeholder=\"Enter description\"\n                onChange={(e) => handleChange(e, \"riskMitigation\")}\n                value={formValues.riskMitigation}\n              />\n              <p className=\"ErrorMessage\">{formErrors.RisksMitigation}</p>\n            </div>\n\n            <div className=\"WeeklyUpdate_Otherdetail_Field_All\">\n              <label className=\"WeeklyUpdate_Otherdetail_Field_All_label\">\n                Risks\n              </label>\n              <br />\n              <input\n                className=\"WeeklyUpdate_Otherdetail_Field_All_input\"\n                type=\"text\"\n                placeholder=\"Enter description\"\n                onChange={(e) => handleChange(e, \"risks\")}\n                value={formValues.risks}\n              />\n              <p className=\"ErrorMessage\">{formErrors.Risks}</p>\n            </div>\n\n            <div className=\"WeeklyUpdate_Otherdetail_Field_All\">\n              <label className=\"WeeklyUpdate_Otherdetail_Field_All_label\">\n                Support Required\n              </label>\n              <br />\n              <input\n                className=\"WeeklyUpdate_Otherdetail_Field_All_input\"\n                type=\"text\"\n                placeholder=\"Enter description\"\n                onChange={(e) => handleChange(e, \"supportRequired\")}\n                value={formValues.supportRequired}\n              />\n              <p className=\"ErrorMessage\">{formErrors.SupportRequired}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"WeeklyUpdate_SubmitButton\">\n          <button\n            className=\"Cancelbtn\"\n            onClick={(e) => {\n              props.setShownOff(false);\n              setFormValues(\"\");\n              setFormErrors(\"\");\n            }}\n          >\n            Cancel\n          </button>\n\n          <button className=\"WeeklyUpdate_SubmitButton_Update\">Update</button>\n        </div>\n      </div>\n    </form>\n  ) : (\n    //Form Ending\n    // ) : <ProjectDetails/>;\n    <div />\n  );\n};\n\nexport default WeeklyUpdate;\n","C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\Definition\\Definition.js",[],[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\CommonDropDown.js",["129","130","131","132","133","134","135","136","137"],[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Containers\\ResourceFeild\\ResourceFeild.js",[],[],"C:\\Users\\sakth\\Downloads\\Mini-Project-main\\Mini-Project-main\\src\\App\\Components\\Login.js",["138","139","140","141","142"],[],{"ruleId":"143","severity":1,"message":"144","line":1,"column":16,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"147","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"148","line":9,"column":21,"nodeType":"145","messageId":"146","endLine":9,"endColumn":34},{"ruleId":"143","severity":1,"message":"149","line":14,"column":10,"nodeType":"145","messageId":"146","endLine":14,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":50,"column":59,"nodeType":"152","messageId":"153","endLine":50,"endColumn":61},{"ruleId":"154","severity":1,"message":"155","line":32,"column":52,"nodeType":"156","messageId":"157","endLine":32,"endColumn":53},{"ruleId":"158","severity":1,"message":"159","line":12,"column":13,"nodeType":"160","endLine":12,"endColumn":62},{"ruleId":"143","severity":1,"message":"144","line":1,"column":38,"nodeType":"145","messageId":"146","endLine":1,"endColumn":48},{"ruleId":"161","severity":1,"message":"162","line":68,"column":6,"nodeType":"163","endLine":68,"endColumn":25,"suggestions":"164"},{"ruleId":"158","severity":1,"message":"159","line":93,"column":13,"nodeType":"160","endLine":97,"endColumn":15},{"ruleId":"143","severity":1,"message":"165","line":8,"column":8,"nodeType":"145","messageId":"146","endLine":8,"endColumn":13},{"ruleId":"143","severity":1,"message":"166","line":67,"column":10,"nodeType":"145","messageId":"146","endLine":67,"endColumn":18},{"ruleId":"143","severity":1,"message":"167","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"168","line":59,"column":10,"nodeType":"145","messageId":"146","endLine":59,"endColumn":16},{"ruleId":"143","severity":1,"message":"169","line":62,"column":13,"nodeType":"145","messageId":"146","endLine":62,"endColumn":17},{"ruleId":"158","severity":1,"message":"159","line":33,"column":11,"nodeType":"160","endLine":37,"endColumn":13},{"ruleId":"158","severity":1,"message":"159","line":48,"column":17,"nodeType":"160","endLine":56,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":60,"column":17,"nodeType":"160","endLine":67,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":75,"column":17,"nodeType":"160","endLine":83,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":87,"column":17,"nodeType":"160","endLine":94,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":102,"column":17,"nodeType":"160","endLine":110,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":114,"column":17,"nodeType":"160","endLine":121,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":129,"column":17,"nodeType":"160","endLine":137,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":139,"column":17,"nodeType":"160","endLine":146,"endColumn":19},{"ruleId":"143","severity":1,"message":"170","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":67,"column":9,"nodeType":"160","endLine":67,"endColumn":50},{"ruleId":"158","severity":1,"message":"159","line":106,"column":13,"nodeType":"160","endLine":106,"endColumn":52},{"ruleId":"158","severity":1,"message":"159","line":107,"column":13,"nodeType":"160","endLine":107,"endColumn":54},{"ruleId":"158","severity":1,"message":"159","line":108,"column":13,"nodeType":"160","endLine":108,"endColumn":54},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'setSearchItem' is assigned a value but never used.","'searchItem' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'weekUpdate'. Either include it or remove the dependency array.","ArrayExpression",["171"],"'Delay' is defined but never used.","'isSubmit' is assigned a value but never used.","'useEffect' is defined but never used.","'submit' is assigned a value but never used.","'name' is assigned a value but never used.","'Homepage' is defined but never used.",{"desc":"172","fix":"173"},"Update the dependencies array to be: [week, monthUpdate, weekUpdate]",{"range":"174","text":"175"},[1714,1733],"[week, monthUpdate, weekUpdate]"]